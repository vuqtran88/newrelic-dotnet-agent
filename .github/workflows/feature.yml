name: test feature

# Does not run on PUSH since we have already ran all the test
on:
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true
  agent_version: ""

jobs:

  cancel-previous-workflow-runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-test-windows-profiler:
    needs: cancel-previous-workflow-runs
    if: ${{ always() }}
    name: Build Windows Profiler

    runs-on: windows-2019

    env:
      profiler_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler
      profiler_solution_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler\NewRelic.Profiler.sln
      output_path: ${{ github.workspace }}\src\Agent\_profilerBuild

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.1

    - name: Clean out _profilerBuild directory
      run: |
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-release" -Recurse -Force  -ErrorAction SilentlyContinue
      shell: powershell

    - name: Install dependencies
      run: |
        Write-Host ${{ env.tools_path }}\nuget.exe restore ${{ env.profiler_solution_path }} -NoCache -Source `"https://www.nuget.org/api/v2`"
        ${{ env.tools_path }}\nuget.exe restore ${{ env.profiler_solution_path }} -NoCache -Source "https://www.nuget.org/api/v2"
      shell: powershell

    - name: Build x64
      run: |
        Write-Host "MSBuild.exe -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}"
        MSBuild.exe -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}
      shell: powershell
      
    - name: Build x86
      run: |
        Write-Host "MSBuild.exe -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}"
        MSBuild.exe -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}
      shell: powershell

    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: profiler
        path: ${{ github.workspace }}\src\Agent\_profilerBuild\**\*
        if-no-files-found: error

  build-test-linux-profiler:
    needs: cancel-previous-workflow-runs
    if: ${{ always() }}
    name: Build Linux Profiler

    runs-on: ubuntu-18.04

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
      #<other env vars here>

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Clean out _profilerBuild directory
      run: |
        rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.*
        rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-release
        rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release
        rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release
      shell: bash

    - name: Build Linux Profler
      run: |
        cd ${{ env.profiler_path }}
        docker-compose build build
        docker-compose run build
      shell: bash

    - name: Move Profiler to staging folder
      run: |
        mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-release/
        mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-release/libNewRelicProfiler.so
      shell: bash

    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: profiler
        path: |
          ${{ github.workspace }}/src/Agent/_profilerBuild/
        if-no-files-found: error

  # This builds both FullAgent and MSIInstaller since MSIInstaller requires FullAgent artifacts.
  build-test-fullagent-msi:
    needs: [ build-test-windows-profiler, build-test-linux-profiler ]
    name: Build and Test FullAgent and MSIInstaller

    runs-on: windows-2019

    env:
      fullagent_solution_path: ${{ github.workspace }}\FullAgent.sln
      msi_solution_path: ${{ github.workspace }}\src\Agent\MsiInstaller\MsiInstaller.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Clean out _profilerBuild directory
      run: |
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
        Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-release" -Recurse -Force  -ErrorAction SilentlyContinue
      shell: powershell

    - name: Download Profiler Artifacts Before Agent Build
      uses: actions/download-artifact@v2
      with:
        name: profiler
        path: ${{ github.workspace }}/src/Agent/_profilerBuild/
    
    - name: Install dependencies for FullAgent.sln
      run: |
        Write-Host ${{ env.tools_path }}\nuget.exe restore ${{ env.fullagent_solution_path }} -NoCache -Source `"https://www.nuget.org/api/v2`"
        ${{ env.tools_path }}\nuget.exe restore ${{ env.fullagent_solution_path }} -NoCache -Source "https://www.nuget.org/api/v2"
      shell: powershell

    - name: Install dependencies for MsiInstaller.sln
      run: |
        Write-Host ${{ env.tools_path }}\nuget.exe restore ${{ env.msi_solution_path }} -NoCache -Source `"https://www.nuget.org/api/v2`"
        ${{ env.tools_path }}\nuget.exe restore ${{ env.msi_solution_path }} -NoCache -Source "https://www.nuget.org/api/v2"
      shell: powershell
    
    - name: Build FullAgent.sln
      run: |
        Write-Host "MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}"
        MSBuild.exe -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}
      shell: powershell
      
    - name: Set agent version
      run: |
        $agentVersion = (Get-Item "${{ github.workspace }}\src\_build\AnyCPU-Release\NewRelic.Agent.Core\net45\NewRelic.Agent.Core.dll").VersionInfo.FileVersion
        echo "agent_version=$agentVersion" >> $GITHUB_ENV

      shell: powershell
